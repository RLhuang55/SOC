$version Generated by VerilatedVcd $end
$date Tue Apr 18 18:42:09 2023
 $end
$timescale  10s $end

 $scope module top $end
  $var wire  1 =! clk_i $end
  $var wire  1 <! rst_i $end
  $scope module test_top $end
   $var wire  1 % ce_wire $end
   $var wire  1 =! clk_i $end
   $var wire  6 ,! ctrl_stall_o [5:0] $end
   $var wire 32 "! exe_mem_addr_o [31:0] $end
   $var wire 32 #! exe_mem_data_o [31:0] $end
   $var wire 32 2 exe_mem_mem_addr_o [31:0] $end
   $var wire 32 3 exe_mem_mem_data_o [31:0] $end
   $var wire  4 4 exe_mem_mem_op_o [3:0] $end
   $var wire  1 1 exe_mem_mem_we_o $end
   $var wire  4 $! exe_mem_op_o [3:0] $end
   $var wire  5 . exe_mem_reg_waddr_o [4:0] $end
   $var wire 32 0 exe_mem_reg_wdata_o [31:0] $end
   $var wire  1 / exe_mem_reg_we_o $end
   $var wire  1 !! exe_mem_we_o $end
   $var wire  5 | exe_reg_waddr_o [4:0] $end
   $var wire 32 ~ exe_reg_wdata_o [31:0] $end
   $var wire  1 } exe_reg_we_o $end
   $var wire  1 : id_exe_inst_is_load_o $end
   $var wire 32 - id_exe_inst_o [31:0] $end
   $var wire 32 ) id_exe_op1_o [31:0] $end
   $var wire 32 * id_exe_op2_o [31:0] $end
   $var wire  5 9 id_exe_rd_o [4:0] $end
   $var wire  5 , id_exe_reg_waddr_o [4:0] $end
   $var wire  1 + id_exe_reg_we_o $end
   $var wire 32 q id_inst_o [31:0] $end
   $var wire 32 r id_op1_o [31:0] $end
   $var wire 32 s id_op2_o [31:0] $end
   $var wire  5 v id_reg1_addr_o [4:0] $end
   $var wire  1 x id_reg1_re_o $end
   $var wire  5 w id_reg2_addr_o [4:0] $end
   $var wire  1 y id_reg2_re_o $end
   $var wire  5 u id_reg_waddr_o [4:0] $end
   $var wire  1 t id_reg_we_o $end
   $var wire  1 8 id_stallreq_o $end
   $var wire 32 ' if_id_inst_addr_o [31:0] $end
   $var wire 32 ( if_id_inst_o [31:0] $end
   $var wire 32 $ if_inst_addr_o [31:0] $end
   $var wire 32 & if_inst_o [31:0] $end
   $var wire 32 A! mem_mem_addr_o [31:0] $end
   $var wire 32 B! mem_mem_data_o [31:0] $end
   $var wire  4 C! mem_mem_op_o [3:0] $end
   $var wire  1 @! mem_mem_we_o $end
   $var wire 32 (! mem_ram_addr_o [31:0] $end
   $var wire 32 +! mem_ram_data_i [31:0] $end
   $var wire 32 *! mem_ram_data_o [31:0] $end
   $var wire  1 )! mem_ram_w_request_o $end
   $var wire  5 %! mem_reg_waddr_o [4:0] $end
   $var wire 32 '! mem_reg_wdata_o [31:0] $end
   $var wire  1 &! mem_reg_we_o $end
   $var wire  5 5 mem_wb_reg_waddr_o [4:0] $end
   $var wire 32 7 mem_wb_reg_wdata_o [31:0] $end
   $var wire  1 6 mem_wb_reg_we_o $end
   $var wire 32 $ pc_wire [31:0] $end
   $var wire 32 z reg1_data_o [31:0] $end
   $var wire 32 { reg2_data_o [31:0] $end
   $var wire  1 <! rst_i $end
   $scope module ctrl0 $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_o [5:0] $end
    $var wire  1 8 stallreq_from_id_i $end
   $upscope $end
   $scope module exe0 $end
    $var wire  3 I funct3 [2:0] $end
    $var wire  7 J funct7 [6:0] $end
    $var wire 32 - inst_i [31:0] $end
    $var wire 32 "! mem_addr_o [31:0] $end
    $var wire 32 #! mem_data_o [31:0] $end
    $var wire  4 $! mem_op_o [3:0] $end
    $var wire  1 !! mem_we_o $end
    $var wire 32 ) op1_i [31:0] $end
    $var wire 32 * op2_i [31:0] $end
    $var wire  7 H opcode [6:0] $end
    $var wire 32 8! r_reg_wdata_o [31:0] $end
    $var wire  1 9! r_reg_we_o $end
    $var wire  5 , reg_waddr_i [4:0] $end
    $var wire  5 | reg_waddr_o [4:0] $end
    $var wire 32 ~ reg_wdata_o [31:0] $end
    $var wire  1 + reg_we_i $end
    $var wire  1 } reg_we_o $end
    $var wire  1 <! rst_i $end
    $var wire 32 D! s_l_reg_wdata_o [31:0] $end
    $var wire  1 :! s_l_reg_we_o $end
    $var wire  5 K shamt [4:0] $end
    $scope module exe_type_r0 $end
     $var wire  3 I funct3 [2:0] $end
     $var wire  7 J funct7 [6:0] $end
     $var wire 32 - inst_i [31:0] $end
     $var wire  1 L isType_r $end
     $var wire 32 ) op1_i [31:0] $end
     $var wire 32 * op2_i [31:0] $end
     $var wire  7 H opcode [6:0] $end
     $var wire 32 E! reg_waddr_i [31:0] $end
     $var wire 32 ;! reg_waddr_o [31:0] $end
     $var wire 32 8! reg_wdata_o [31:0] $end
     $var wire  1 9! reg_we_o $end
     $var wire  1 <! rst_i $end
    $upscope $end
    $scope module exe_type_s_l0 $end
     $var wire  3 I funct3 [2:0] $end
     $var wire 32 - inst_i [31:0] $end
     $var wire 32 M load_addr_offset [31:0] $end
     $var wire 32 "! mem_addr_o [31:0] $end
     $var wire 32 #! mem_data_o [31:0] $end
     $var wire  4 $! mem_op_o [3:0] $end
     $var wire  1 !! mem_we_o $end
     $var wire 32 ) op1_i [31:0] $end
     $var wire 32 * op2_i [31:0] $end
     $var wire  7 H opcode [6:0] $end
     $var wire 32 D! reg_wdata_o [31:0] $end
     $var wire  1 :! reg_we_o $end
     $var wire  1 <! rst_i $end
     $var wire 32 N store_addr_offset [31:0] $end
    $upscope $end
   $upscope $end
   $scope module exe_mem0 $end
    $var wire  1 =! clk_i $end
    $var wire 32 "! mem_addr_i [31:0] $end
    $var wire 32 2 mem_addr_o [31:0] $end
    $var wire 32 #! mem_data_i [31:0] $end
    $var wire 32 3 mem_data_o [31:0] $end
    $var wire  4 $! mem_op_i [3:0] $end
    $var wire  4 4 mem_op_o [3:0] $end
    $var wire  1 !! mem_we_i $end
    $var wire  1 1 mem_we_o $end
    $var wire  5 | reg_waddr_i [4:0] $end
    $var wire  5 . reg_waddr_o [4:0] $end
    $var wire 32 ~ reg_wdata_i [31:0] $end
    $var wire 32 0 reg_wdata_o [31:0] $end
    $var wire  1 } reg_we_i $end
    $var wire  1 / reg_we_o $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
   $upscope $end
   $scope module id0 $end
    $var wire  5 9 exe_rd_i [4:0] $end
    $var wire  5 | exe_reg_waddr_i [4:0] $end
    $var wire 32 ~ exe_reg_wdata_i [31:0] $end
    $var wire  1 } exe_reg_we_i $end
    $var wire 32 3! i_op1_o [31:0] $end
    $var wire 32 4! i_op2_o [31:0] $end
    $var wire  5 /! i_reg1_raddr_o [4:0] $end
    $var wire  1 1! i_reg1_re_o $end
    $var wire  5 0! i_reg2_raddr_o [4:0] $end
    $var wire  1 2! i_reg2_re_o $end
    $var wire  5 6! i_reg_waddr_o [4:0] $end
    $var wire  1 5! i_reg_we_o $end
    $var wire 32 ' inst_addr_i [31:0] $end
    $var wire 32 ( inst_i [31:0] $end
    $var wire 32 q inst_o [31:0] $end
    $var wire  1 8 is_load_hazard $end
    $var wire  5 %! mem_reg_waddr_i [4:0] $end
    $var wire 32 '! mem_reg_wdata_i [31:0] $end
    $var wire  1 &! mem_reg_we_i $end
    $var wire 32 r op1_o [31:0] $end
    $var wire 32 -! op1_o_final [31:0] $end
    $var wire 32 s op2_o [31:0] $end
    $var wire 32 .! op2_o_final [31:0] $end
    $var wire  7 ; opcode [6:0] $end
    $var wire  1 : pre_inst_is_load_i $end
    $var wire 32 >! r_op1_o [31:0] $end
    $var wire 32 ?! r_op2_o [31:0] $end
    $var wire  5 < r_reg1_raddr_o [4:0] $end
    $var wire  1 > r_reg1_re_o $end
    $var wire  5 = r_reg2_raddr_o [4:0] $end
    $var wire  1 ? r_reg2_re_o $end
    $var wire  5 A r_reg_waddr_o [4:0] $end
    $var wire  1 @ r_reg_we_o $end
    $var wire  5 B rd [4:0] $end
    $var wire  5 v reg1_raddr_o [4:0] $end
    $var wire 32 z reg1_rdata_i [31:0] $end
    $var wire  1 x reg1_re_o $end
    $var wire  5 w reg2_raddr_o [4:0] $end
    $var wire 32 { reg2_rdata_i [31:0] $end
    $var wire  1 y reg2_re_o $end
    $var wire  5 u reg_waddr_o [4:0] $end
    $var wire  1 t reg_we_o $end
    $var wire  5 C rs1 [4:0] $end
    $var wire  5 D rs2 [4:0] $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
    $var wire  1 8 stallreq_o $end
    $scope module inst_type_i $end
     $var wire  3 E funct3 [2:0] $end
     $var wire 32 ( inst_i [31:0] $end
     $var wire 32 3! op1_o [31:0] $end
     $var wire 32 4! op2_o [31:0] $end
     $var wire  5 B rd [4:0] $end
     $var wire  5 /! reg1_raddr_o [4:0] $end
     $var wire 32 z reg1_rdata_i [31:0] $end
     $var wire  1 1! reg1_re_o $end
     $var wire  5 0! reg2_raddr_o [4:0] $end
     $var wire 32 { reg2_rdata_i [31:0] $end
     $var wire  1 2! reg2_re_o $end
     $var wire  5 6! reg_waddr_o [4:0] $end
     $var wire  1 5! reg_we_o $end
     $var wire  5 C rs1 [4:0] $end
     $var wire  5 D rs2 [4:0] $end
    $upscope $end
    $scope module inst_type_r $end
     $var wire  3 E funct3 [2:0] $end
     $var wire  7 F funct7 [6:0] $end
     $var wire 32 ( inst_i [31:0] $end
     $var wire  1 G isType_r $end
     $var wire 32 >! op1_o [31:0] $end
     $var wire 32 ?! op2_o [31:0] $end
     $var wire  7 ; opcode [6:0] $end
     $var wire  5 B rd [4:0] $end
     $var wire  5 < reg1_raddr_o [4:0] $end
     $var wire 32 z reg1_rdata_i [31:0] $end
     $var wire  1 > reg1_re_o $end
     $var wire  5 = reg2_raddr_o [4:0] $end
     $var wire 32 { reg2_rdata_i [31:0] $end
     $var wire  1 ? reg2_re_o $end
     $var wire  5 A reg_waddr_o [4:0] $end
     $var wire  1 @ reg_we_o $end
     $var wire  5 C rs1 [4:0] $end
     $var wire  5 D rs2 [4:0] $end
     $var wire  5 D shamt [4:0] $end
    $upscope $end
   $upscope $end
   $scope module id_exe0 $end
    $var wire  1 =! clk_i $end
    $var wire 32 q inst_i [31:0] $end
    $var wire  1 : inst_is_load_o $end
    $var wire 32 - inst_o [31:0] $end
    $var wire 32 r op1_i [31:0] $end
    $var wire 32 ) op1_o [31:0] $end
    $var wire 32 s op2_i [31:0] $end
    $var wire 32 * op2_o [31:0] $end
    $var wire  7 7! opcode [6:0] $end
    $var wire  5 9 rd_o [4:0] $end
    $var wire  5 u reg_waddr_i [4:0] $end
    $var wire  5 , reg_waddr_o [4:0] $end
    $var wire  1 t reg_we_i $end
    $var wire  1 + reg_we_o $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
   $upscope $end
   $scope module if_id0 $end
    $var wire  1 =! clk_i $end
    $var wire 32 $ inst_addr_i [31:0] $end
    $var wire 32 ' inst_addr_o [31:0] $end
    $var wire 32 & inst_i [31:0] $end
    $var wire 32 ( inst_o [31:0] $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
   $upscope $end
   $scope module mem0 $end
    $var wire 32 2 mem_addr_i [31:0] $end
    $var wire 32 A! mem_addr_o [31:0] $end
    $var wire 32 3 mem_data_i [31:0] $end
    $var wire 32 B! mem_data_o [31:0] $end
    $var wire  4 4 mem_op_i [3:0] $end
    $var wire  4 C! mem_op_o [3:0] $end
    $var wire  1 1 mem_we_i $end
    $var wire  1 @! mem_we_o $end
    $var wire 32 (! ram_addr_o [31:0] $end
    $var wire  2 O ram_addr_offset [1:0] $end
    $var wire 32 +! ram_data_i [31:0] $end
    $var wire 32 *! ram_data_o [31:0] $end
    $var wire  1 )! ram_w_request_o $end
    $var wire  5 . reg_waddr_i [4:0] $end
    $var wire  5 %! reg_waddr_o [4:0] $end
    $var wire 32 0 reg_wdata_i [31:0] $end
    $var wire 32 '! reg_wdata_o [31:0] $end
    $var wire  1 / reg_we_i $end
    $var wire  1 &! reg_we_o $end
    $var wire  1 <! rst_i $end
   $upscope $end
   $scope module mem_wb0 $end
    $var wire  1 =! clk_i $end
    $var wire  5 %! reg_waddr_i [4:0] $end
    $var wire  5 5 reg_waddr_o [4:0] $end
    $var wire 32 '! reg_wdata_i [31:0] $end
    $var wire 32 7 reg_wdata_o [31:0] $end
    $var wire  1 &! reg_we_i $end
    $var wire  1 6 reg_we_o $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
   $upscope $end
   $scope module pc_reg0 $end
    $var wire  1 % ce_o $end
    $var wire  1 =! clk_i $end
    $var wire 32 $ pc_o [31:0] $end
    $var wire  1 <! rst_i $end
    $var wire  6 ,! stall_i [5:0] $end
   $upscope $end
   $scope module ram0 $end
    $var wire 32 (! addr_i [31:0] $end
    $var wire  1 =! clk_i $end
    $var wire 32 *! data_i [31:0] $end
    $var wire 32 +! data_o [31:0] $end
    $var wire  1 <! rst_i $end
    $var wire  1 )! we_i $end
   $upscope $end
   $scope module regfile0 $end
    $var wire  1 =! clk_i $end
    $var wire 32 # i [31:0] $end
    $var wire  5 v raddr1_i [4:0] $end
    $var wire  5 w raddr2_i [4:0] $end
    $var wire 32 z rdata1_o [31:0] $end
    $var wire 32 { rdata2_o [31:0] $end
    $var wire  1 x re1_i $end
    $var wire  1 y re2_i $end
    $var wire 32 Q regs(0) [31:0] $end
    $var wire 32 R regs(1) [31:0] $end
    $var wire 32 [ regs(10) [31:0] $end
    $var wire 32 \ regs(11) [31:0] $end
    $var wire 32 ] regs(12) [31:0] $end
    $var wire 32 ^ regs(13) [31:0] $end
    $var wire 32 _ regs(14) [31:0] $end
    $var wire 32 ` regs(15) [31:0] $end
    $var wire 32 a regs(16) [31:0] $end
    $var wire 32 b regs(17) [31:0] $end
    $var wire 32 c regs(18) [31:0] $end
    $var wire 32 d regs(19) [31:0] $end
    $var wire 32 S regs(2) [31:0] $end
    $var wire 32 e regs(20) [31:0] $end
    $var wire 32 f regs(21) [31:0] $end
    $var wire 32 g regs(22) [31:0] $end
    $var wire 32 h regs(23) [31:0] $end
    $var wire 32 i regs(24) [31:0] $end
    $var wire 32 j regs(25) [31:0] $end
    $var wire 32 k regs(26) [31:0] $end
    $var wire 32 l regs(27) [31:0] $end
    $var wire 32 m regs(28) [31:0] $end
    $var wire 32 n regs(29) [31:0] $end
    $var wire 32 T regs(3) [31:0] $end
    $var wire 32 o regs(30) [31:0] $end
    $var wire 32 p regs(31) [31:0] $end
    $var wire 32 U regs(4) [31:0] $end
    $var wire 32 V regs(5) [31:0] $end
    $var wire 32 W regs(6) [31:0] $end
    $var wire 32 X regs(7) [31:0] $end
    $var wire 32 Y regs(8) [31:0] $end
    $var wire 32 Z regs(9) [31:0] $end
    $var wire  1 <! rst_i $end
    $var wire  5 5 waddr_i [4:0] $end
    $var wire 32 7 wdata_i [31:0] $end
    $var wire  1 6 we_i $end
   $upscope $end
   $scope module rom0 $end
    $var wire 21 P addr4 [20:0] $end
    $var wire 32 $ addr_i [31:0] $end
    $var wire  1 % ce_i $end
    $var wire  1 =! clk_i $end
    $var wire 32 & inst_o [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000100000 #
b00000000000000000000000000000000 $
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
b00000 ,
b00000000000000000000000000000000 -
b00000 .
0/
b00000000000000000000000000000000 0
01
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b0000 4
b00000 5
06
b00000000000000000000000000000000 7
08
b00000 9
0:
b0000000 ;
b00000 <
b00000 =
0>
0?
0@
b00000 A
b00000 B
b00000 C
b00000 D
b000 E
b0000000 F
0G
b0000000 H
b000 I
b0000000 J
b00000 K
0L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00 O
b000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000010011 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
0t
b00000 u
b00000 v
b00000 w
0x
0y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000 |
0}
b00000000000000000000000000000000 ~
0!!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b0000 $!
b00000 %!
1&!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
0)!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000 /!
b00000 0!
11!
02!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
15!
b00000 6!
b0010011 7!
b00000000000000000000000000000000 8!
09!
0:!
b00000000000000000000000000000000 ;!
1<!
0=!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
0@!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b0000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
#10
b00000000000000000000000000010011 (
b00000000000000000000000000010011 -
1/
16
b0010011 ;
b0010011 H
1=!
#15
0=!
#20
1=!
#25
0=!
#30
1=!
#35
0=!
#40
1=!
#45
0=!
#50
1=!
#55
1t
1x
0<!
0=!
#60
1%
b00000000000000000000000000000000 (
1+
0/
b0000000 ;
0t
0x
1}
0&!
1=!
#65
0=!
#70
b00000000000000000000000000000100 $
b11111111111111110001000110110111 &
0+
1/
06
b000000000000000000100 P
0}
1&!
1=!
#75
0=!
#80
b00000000000000000000000000001000 $
b11110000101100011000000110010011 &
b00000000000000000000000000000100 '
b11111111111111110001000110110111 (
0/
16
b0110111 ;
b00011 B
b11110 C
b11111 D
b001 E
b1111111 F
b000000000000000001000 P
b11111111111111110001000110110111 q
b11111111111111110001000000000000 r
1t
b00011 u
0&!
b11111111111111110001000000000000 -!
b11110 /!
b11111111111111111111111111111111 4!
b00011 6!
b0110111 7!
1=!
#85
0=!
#90
b00000000000000000000000000001100 $
b00000000000000001111001000110111 &
b00000000000000000000000000001000 '
b11110000101100011000000110010011 (
b11111111111111110001000000000000 )
1+
b00011 ,
b11111111111111110001000110110111 -
06
b00011 9
b0010011 ;
b00011 C
b01011 D
b000 E
b1111000 F
b0110111 H
b001 I
b1111111 J
b11111 K
b11111111111111111111111111111111 M
b11111111111111111111111111100011 N
b000000000000000001100 P
b11110000101100011000000110010011 q
b11111111111111111111111100001011 s
b00011 v
1x
b00011 |
1}
b11111111111111110001000000000000 ~
b00000000000000000000000000000000 -!
b11111111111111111111111100001011 .!
b00011 /!
b11111111111111111111111100001011 4!
b0010011 7!
1=!
#95
0=!
#100
b00000000000000000000000000010000 $
b00001010101100100000001000010011 &
b00000000000000000000000000001100 '
b00000000000000001111001000110111 (
b11111111111111111111111100001011 *
b11110000101100011000000110010011 -
b00011 .
1/
b11111111111111110001000000000000 0
b0110111 ;
b00100 B
b00001 C
b00000 D
b111 E
b0000000 F
b0010011 H
b000 I
b1111000 J
b01011 K
b11111111111111111111111100001011 M
b11111111111111111111111100000011 N
b000000000000000010000 P
b00000000000000001111001000110111 q
b00000000000000001111000000000000 r
b00000000000000000000000000000000 s
b00100 u
b00000 v
0x
b11111111111111110000111100001011 ~
b00011 %!
1&!
b11111111111111110001000000000000 '!
b00000000000000001111000000000000 -!
b00000000000000000000000000000000 .!
b00001 /!
b00000000000000000000000000000000 4!
b00100 6!
b0110111 7!
1=!
#105
0=!
#110
b00000000000000000000000000010100 $
b00000000000000000000001010010111 &
b00000000000000000000000000010000 '
b00001010101100100000001000010011 (
b00000000000000001111000000000000 )
b00000000000000000000000000000000 *
b00100 ,
b00000000000000001111001000110111 -
b11111111111111110000111100001011 0
b00011 5
16
b11111111111111110001000000000000 7
b00100 9
b0010011 ;
b00100 C
b01011 D
b000 E
b0000101 F
b0110111 H
b111 I
b0000000 J
b00000 K
b00000000000000000000000000000000 M
b00000000000000000000000000000100 N
b000000000000000010100 P
b00001010101100100000001000010011 q
b00000000000000000000000010101011 s
b00100 v
1x
b00100 |
b00000000000000001111000000000000 ~
b11111111111111110000111100001011 '!
b00000000000000000000000000000000 -!
b00000000000000000000000010101011 .!
b00100 /!
b00000000000000000000000010101011 4!
b0010011 7!
1=!
#115
0=!
#120
b00000000000000000000000000011000 $
b00000001110000101000001010010011 &
b00000000000000000000000000010100 '
b00000000000000000000001010010111 (
b00000000000000000000000010101011 *
b00001010101100100000001000010011 -
b00100 .
b00000000000000001111000000000000 0
b11111111111111110000111100001011 7
b0010111 ;
b00101 B
b00000 C
b00000 D
b0000000 F
b0010011 H
b000 I
b0000101 J
b01011 K
b00000000000000000000000010101011 M
b00000000000000000000000010100100 N
b000000000000000011000 P
b11111111111111110001000000000000 T
b00000000000000000000001010010111 q
b00000000000000000000000000010100 r
b00000000000000000000000000000000 s
b00101 u
b00000 v
0x
b00000000000000001111000010101011 ~
b00100 %!
b00000000000000001111000000000000 '!
b00000000000000000000000000010100 -!
b00000000000000000000000000000000 .!
b00000 /!
b00000000000000000000000000000000 4!
b00101 6!
b0010111 7!
1=!
#125
0=!
#130
b00000000000000000000000000011100 $
b00000000000000101001001000000011 &
b00000000000000000000000000011000 '
b00000001110000101000001010010011 (
b00000000000000000000000000010100 )
b00000000000000000000000000000000 *
b00101 ,
b00000000000000000000001010010111 -
b00000000000000001111000010101011 0
b00100 5
b00000000000000001111000000000000 7
b00101 9
b0010011 ;
b00101 C
b11100 D
b0010111 H
b0000000 J
b00000 K
b00000000000000000000000000000000 M
b00000000000000000000000000000101 N
b000000000000000011100 P
b11111111111111110000111100001011 T
b00000001110000101000001010010011 q
b00000000000000000000000000011100 s
b00101 v
1x
b00101 |
b00000000000000000000000000010100 ~
b00000000000000001111000010101011 '!
b00000000000000000000000000000000 -!
b00000000000000000000000000011100 .!
b00101 /!
b00000000000000000000000000011100 4!
b0010011 7!
1=!
#135
0=!
#140
b00000000000000000000000000100000 $
b00000000001100100000000000100011 &
b00000000000000000000000000011100 '
b00000000000000101001001000000011 (
b00000000000000000000000000011100 *
b00000001110000101000001010010011 -
b00101 .
b00000000000000000000000000010100 0
b00000000000000001111000010101011 7
b0000011 ;
b00100 B
b00000 D
b001 E
b0010011 H
b11100 K
b00000000000000000000000000011100 M
b000000000000000100000 P
b00000000000000001111000000000000 U
b00000000000000101001001000000011 q
b00000000000000000000000000110000 r
b00000000000000000000000000000000 s
b00100 u
b00000000000000000000000000110000 ~
b00101 %!
b00000000000000000000000000010100 '!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 4!
b00100 6!
b0000011 7!
1=!
#145
0=!
#150
b00000000000000000000000000100100 $
b00000000101000000000000100010011 &
b00000000000000000000000000100000 '
b00000000001100100000000000100011 (
b00000000000000000000000000110000 )
b00000000000000000000000000000000 *
b00100 ,
b00000000000000101001001000000011 -
b00000000000000000000000000110000 0
b00101 5
b00000000000000000000000000010100 7
18
b00100 9
1:
b0100011 ;
b00000 B
b00100 C
b00011 D
b000 E
b0000011 H
b001 I
b00000 K
b00000000000000000000000000000000 M
b00000000000000000000000000000100 N
b000000000000000100100 P
b00000000000000001111000010101011 U
b00000000001100100000000000100011 q
b00000000000000000000000000000000 r
b11111111111111110000111100001011 s
0t
b00000 u
b00100 v
b00011 w
1y
b00000000000000001111000010101011 z
b11111111111111110000111100001011 {
b00100 |
b00000000000000000000000000000000 ~
b00000000000000000000000000110000 "!
b1010 $!
b00000000000000000000000000110000 '!
b000111 ,!
b00000000000000001111000010101011 -!
b11111111111111110000111100001011 .!
b00100 /!
b00000000000000001111000010101011 3!
b00000000000000000000000000000011 4!
b00000 6!
b0100011 7!
1:!
1=!
#155
0=!
#160
b00000000000000000000000000101000 $
b00000000101000000000110100010011 &
b00000000000000000000000000000000 )
0+
b00000 ,
b00000000000000000000000000010011 -
b00100 .
b00000000000000000000000000000000 0
b00000000000000000000000000110000 2
b1010 4
b00000000000000000000000000110000 7
08
b00000 9
0:
b0010011 H
b000 I
b00000000000000000000000000000000 N
b000000000000000101000 P
b00000000000000000000000000010100 V
b00000 |
0}
b00000000000000000000000000000000 "!
b0000 $!
b00100 %!
b00000000000000000000000000000000 '!
b00000000000000000000000000110000 (!
b000000 ,!
0:!
1=!
#165
0=!
#170
b00000000000000000000000000101100 $
b00000000101000000000110110010011 &
b00000000000000000000000000101000 '
b00000000101000000000110100010011 (
b11111111111111110000111100001011 *
b00000000001100100000000000100011 -
b00000 .
0/
b00000000000000000000000000000000 2
b0000 4
b00100 5
b00000000000000000000000000000000 7
b0010011 ;
b11010 B
b00000 C
b01010 D
b0100011 H
b00011 K
b00000000000000000000000000000011 M
b000000000000000101100 P
b00000000000000000000000000110000 V
b00000000101000000000110100010011 q
b00000000000000000000000000001010 s
1t
b11010 u
b00000 v
b00000 w
0y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
1!!
b11111111111111110000111100001011 #!
b0001 $!
b00000 %!
0&!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 -!
b00000000000000000000000000001010 .!
b00000 /!
b00000000000000000000000000000000 3!
b00000000000000000000000000001010 4!
b11010 6!
b0010011 7!
1=!
#175
0=!
#180
b00000000000000000000000000110000 $
b00000000001100000010000000010000 &
b00000000000000000000000000101100 '
b00000000101000000000110110010011 (
b00000000000000000000000000001010 *
1+
b11010 ,
b00000000101000000000110100010011 -
11
b11111111111111110000111100001011 3
b0001 4
b00000 5
06
b11010 9
b11011 B
b0010011 H
b01010 K
b00000000000000000000000000001010 M
b00000000000000000000000000011010 N
b000000000000000110000 P
b00000000000000000000000000000000 U
b00000000101000000000110110010011 q
b11011 u
b11010 |
1}
b00000000000000000000000000001010 ~
0!!
b00000000000000000000000000000000 #!
b0000 $!
1)!
b00000000000000000000000000001011 *!
b11011 6!
1=!
#185
0=!
#190
b00000000000000000000000000110100 $
b00000000000000000000000000000000 &
b00000000000000000000000000110000 '
b00000000001100000010000000010000 (
b11011 ,
b00000000101000000000110110010011 -
b11010 .
1/
b00000000000000000000000000001010 0
01
b00000000000000000000000000000000 3
b0000 4
b11011 9
b0010000 ;
b00000 B
b00011 D
b010 E
b00000000000000000000000000011011 N
b000000000000000110100 P
b00000000000000000000000000010011 q
b00000000000000000000000000000000 s
0t
b00000 u
0x
b11011 |
b11010 %!
1&!
b00000000000000000000000000001010 '!
0)!
b00000000000000000000000000000000 *!
b00000000000000000000000000001011 +!
b00000000000000000000000000000000 .!
b00000000000000000000000000000011 4!
b00000 6!
1=!
#195
0=!
#200
b00000000000000000000000000111000 $
b00000000000000000000000000110100 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 *
0+
b00000 ,
b00000000000000000000000000010011 -
b11011 .
b11010 5
16
b00000000000000000000000000001010 7
b00000 9
b0000000 ;
b00000 D
b000 E
b00000 K
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b000000000000000111000 P
b00000 |
0}
b00000000000000000000000000000000 ~
b11011 %!
b00000000000000000000000000000000 4!
1=!
#205
0=!
#210
b00000000000000000000000000111100 $
b00000000000000000000000000111000 '
b00000 .
0/
b00000000000000000000000000000000 0
b11011 5
b000000000000000111100 P
b00000000000000000000000000001010 k
b00000 %!
0&!
b00000000000000000000000000000000 '!
1=!
#215
0=!
#220
b00000000000000000000000001000000 $
b00000000000000000000000000111100 '
b00000 5
06
b00000000000000000000000000000000 7
b000000000000001000000 P
b00000000000000000000000000001010 l
1=!
#225
0=!
#230
b00000000000000000000000001000100 $
b00000000000000000000000001000000 '
b000000000000001000100 P
1=!
#235
0=!
#240
b00000000000000000000000001001000 $
b00000000000000000000000001000100 '
b000000000000001001000 P
1=!
#245
0=!
#250
b00000000000000000000000001001100 $
b00000000000000000000000001001000 '
b000000000000001001100 P
1=!
