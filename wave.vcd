$version Generated by VerilatedVcd $end
$date Tue Apr 18 02:47:48 2023
 $end
$timescale  10s $end

 $scope module top $end
  $var wire  1 8! clk_i $end
  $var wire  1 7! rst_i $end
  $scope module test_top $end
   $var wire  1 % ce_wire $end
   $var wire  1 8! clk_i $end
   $var wire 32 } exe_mem_addr_o [31:0] $end
   $var wire 32 ~ exe_mem_data_o [31:0] $end
   $var wire 32 2 exe_mem_mem_addr_o [31:0] $end
   $var wire 32 3 exe_mem_mem_data_o [31:0] $end
   $var wire  4 4 exe_mem_mem_op_o [3:0] $end
   $var wire  1 1 exe_mem_mem_we_o $end
   $var wire  4 !! exe_mem_op_o [3:0] $end
   $var wire  5 . exe_mem_reg_waddr_o [4:0] $end
   $var wire 32 0 exe_mem_reg_wdata_o [31:0] $end
   $var wire  1 / exe_mem_reg_we_o $end
   $var wire  1 | exe_mem_we_o $end
   $var wire  5 y exe_reg_waddr_o [4:0] $end
   $var wire 32 { exe_reg_wdata_o [31:0] $end
   $var wire  1 z exe_reg_we_o $end
   $var wire 32 - id_exe_inst_o [31:0] $end
   $var wire 32 ) id_exe_op1_o [31:0] $end
   $var wire 32 * id_exe_op2_o [31:0] $end
   $var wire  5 , id_exe_reg_waddr_o [4:0] $end
   $var wire  1 + id_exe_reg_we_o $end
   $var wire 32 n id_inst_o [31:0] $end
   $var wire 32 o id_op1_o [31:0] $end
   $var wire 32 p id_op2_o [31:0] $end
   $var wire  5 s id_reg1_addr_o [4:0] $end
   $var wire  1 u id_reg1_re_o $end
   $var wire  5 t id_reg2_addr_o [4:0] $end
   $var wire  1 v id_reg2_re_o $end
   $var wire  5 r id_reg_waddr_o [4:0] $end
   $var wire  1 q id_reg_we_o $end
   $var wire 32 ' if_id_inst_addr_o [31:0] $end
   $var wire 32 ( if_id_inst_o [31:0] $end
   $var wire 32 $ if_inst_addr_o [31:0] $end
   $var wire 32 & if_inst_o [31:0] $end
   $var wire 32 <! mem_mem_addr_o [31:0] $end
   $var wire 32 =! mem_mem_data_o [31:0] $end
   $var wire  4 >! mem_mem_op_o [3:0] $end
   $var wire  1 ;! mem_mem_we_o $end
   $var wire 32 %! mem_ram_addr_o [31:0] $end
   $var wire 32 (! mem_ram_data_i [31:0] $end
   $var wire 32 '! mem_ram_data_o [31:0] $end
   $var wire  1 &! mem_ram_w_request_o $end
   $var wire  5 "! mem_reg_waddr_o [4:0] $end
   $var wire 32 $! mem_reg_wdata_o [31:0] $end
   $var wire  1 #! mem_reg_we_o $end
   $var wire  5 5 mem_wb_reg_waddr_o [4:0] $end
   $var wire 32 7 mem_wb_reg_wdata_o [31:0] $end
   $var wire  1 6 mem_wb_reg_we_o $end
   $var wire 32 $ pc_wire [31:0] $end
   $var wire 32 w reg1_data_o [31:0] $end
   $var wire 32 x reg2_data_o [31:0] $end
   $var wire  1 7! rst_i $end
   $scope module exe0 $end
    $var wire  3 F funct3 [2:0] $end
    $var wire  7 G funct7 [6:0] $end
    $var wire 32 - inst_i [31:0] $end
    $var wire 32 } mem_addr_o [31:0] $end
    $var wire 32 ~ mem_data_o [31:0] $end
    $var wire  4 !! mem_op_o [3:0] $end
    $var wire  1 | mem_we_o $end
    $var wire 32 ) op1_i [31:0] $end
    $var wire 32 * op2_i [31:0] $end
    $var wire  7 E opcode [6:0] $end
    $var wire 32 3! r_reg_wdata_o [31:0] $end
    $var wire  1 4! r_reg_we_o $end
    $var wire  5 , reg_waddr_i [4:0] $end
    $var wire  5 y reg_waddr_o [4:0] $end
    $var wire 32 { reg_wdata_o [31:0] $end
    $var wire  1 + reg_we_i $end
    $var wire  1 z reg_we_o $end
    $var wire  1 7! rst_i $end
    $var wire 32 ?! s_l_reg_wdata_o [31:0] $end
    $var wire  1 5! s_l_reg_we_o $end
    $var wire  5 H shamt [4:0] $end
    $scope module exe_type_r0 $end
     $var wire  3 F funct3 [2:0] $end
     $var wire  7 G funct7 [6:0] $end
     $var wire 32 - inst_i [31:0] $end
     $var wire  1 I isType_r $end
     $var wire 32 ) op1_i [31:0] $end
     $var wire 32 * op2_i [31:0] $end
     $var wire  7 E opcode [6:0] $end
     $var wire 32 @! reg_waddr_i [31:0] $end
     $var wire 32 6! reg_waddr_o [31:0] $end
     $var wire 32 3! reg_wdata_o [31:0] $end
     $var wire  1 4! reg_we_o $end
     $var wire  1 7! rst_i $end
    $upscope $end
    $scope module exe_type_s_l0 $end
     $var wire  3 F funct3 [2:0] $end
     $var wire 32 - inst_i [31:0] $end
     $var wire 32 J load_addr_offset [31:0] $end
     $var wire 32 } mem_addr_o [31:0] $end
     $var wire 32 ~ mem_data_o [31:0] $end
     $var wire  4 !! mem_op_o [3:0] $end
     $var wire  1 | mem_we_o $end
     $var wire 32 ) op1_i [31:0] $end
     $var wire 32 * op2_i [31:0] $end
     $var wire  7 E opcode [6:0] $end
     $var wire 32 ?! reg_wdata_o [31:0] $end
     $var wire  1 5! reg_we_o $end
     $var wire  1 7! rst_i $end
     $var wire 32 K store_addr_offset [31:0] $end
    $upscope $end
   $upscope $end
   $scope module exe_mem0 $end
    $var wire  1 8! clk_i $end
    $var wire 32 } mem_addr_i [31:0] $end
    $var wire 32 2 mem_addr_o [31:0] $end
    $var wire 32 ~ mem_data_i [31:0] $end
    $var wire 32 3 mem_data_o [31:0] $end
    $var wire  4 !! mem_op_i [3:0] $end
    $var wire  4 4 mem_op_o [3:0] $end
    $var wire  1 | mem_we_i $end
    $var wire  1 1 mem_we_o $end
    $var wire  5 y reg_waddr_i [4:0] $end
    $var wire  5 . reg_waddr_o [4:0] $end
    $var wire 32 { reg_wdata_i [31:0] $end
    $var wire 32 0 reg_wdata_o [31:0] $end
    $var wire  1 z reg_we_i $end
    $var wire  1 / reg_we_o $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module id0 $end
    $var wire  5 y exe_reg_waddr_i [4:0] $end
    $var wire 32 { exe_reg_wdata_i [31:0] $end
    $var wire  1 z exe_reg_we_i $end
    $var wire 32 /! i_op1_o [31:0] $end
    $var wire 32 0! i_op2_o [31:0] $end
    $var wire  5 +! i_reg1_raddr_o [4:0] $end
    $var wire  1 -! i_reg1_re_o $end
    $var wire  5 ,! i_reg2_raddr_o [4:0] $end
    $var wire  1 .! i_reg2_re_o $end
    $var wire  5 2! i_reg_waddr_o [4:0] $end
    $var wire  1 1! i_reg_we_o $end
    $var wire 32 ' inst_addr_i [31:0] $end
    $var wire 32 ( inst_i [31:0] $end
    $var wire 32 n inst_o [31:0] $end
    $var wire  5 "! mem_reg_waddr_i [4:0] $end
    $var wire 32 $! mem_reg_wdata_i [31:0] $end
    $var wire  1 #! mem_reg_we_i $end
    $var wire 32 o op1_o [31:0] $end
    $var wire 32 )! op1_o_final [31:0] $end
    $var wire 32 p op2_o [31:0] $end
    $var wire 32 *! op2_o_final [31:0] $end
    $var wire  7 8 opcode [6:0] $end
    $var wire 32 9! r_op1_o [31:0] $end
    $var wire 32 :! r_op2_o [31:0] $end
    $var wire  5 9 r_reg1_raddr_o [4:0] $end
    $var wire  1 ; r_reg1_re_o $end
    $var wire  5 : r_reg2_raddr_o [4:0] $end
    $var wire  1 < r_reg2_re_o $end
    $var wire  5 > r_reg_waddr_o [4:0] $end
    $var wire  1 = r_reg_we_o $end
    $var wire  5 ? rd [4:0] $end
    $var wire  5 s reg1_raddr_o [4:0] $end
    $var wire 32 w reg1_rdata_i [31:0] $end
    $var wire  1 u reg1_re_o $end
    $var wire  5 t reg2_raddr_o [4:0] $end
    $var wire 32 x reg2_rdata_i [31:0] $end
    $var wire  1 v reg2_re_o $end
    $var wire  5 r reg_waddr_o [4:0] $end
    $var wire  1 q reg_we_o $end
    $var wire  5 @ rs1 [4:0] $end
    $var wire  5 A rs2 [4:0] $end
    $var wire  1 7! rst_i $end
    $scope module inst_type_i $end
     $var wire  3 B funct3 [2:0] $end
     $var wire 32 ( inst_i [31:0] $end
     $var wire 32 /! op1_o [31:0] $end
     $var wire 32 0! op2_o [31:0] $end
     $var wire  5 ? rd [4:0] $end
     $var wire  5 +! reg1_raddr_o [4:0] $end
     $var wire 32 w reg1_rdata_i [31:0] $end
     $var wire  1 -! reg1_re_o $end
     $var wire  5 ,! reg2_raddr_o [4:0] $end
     $var wire 32 x reg2_rdata_i [31:0] $end
     $var wire  1 .! reg2_re_o $end
     $var wire  5 2! reg_waddr_o [4:0] $end
     $var wire  1 1! reg_we_o $end
     $var wire  5 @ rs1 [4:0] $end
     $var wire  5 A rs2 [4:0] $end
    $upscope $end
    $scope module inst_type_r $end
     $var wire  3 B funct3 [2:0] $end
     $var wire  7 C funct7 [6:0] $end
     $var wire 32 ( inst_i [31:0] $end
     $var wire  1 D isType_r $end
     $var wire 32 9! op1_o [31:0] $end
     $var wire 32 :! op2_o [31:0] $end
     $var wire  7 8 opcode [6:0] $end
     $var wire  5 ? rd [4:0] $end
     $var wire  5 9 reg1_raddr_o [4:0] $end
     $var wire 32 w reg1_rdata_i [31:0] $end
     $var wire  1 ; reg1_re_o $end
     $var wire  5 : reg2_raddr_o [4:0] $end
     $var wire 32 x reg2_rdata_i [31:0] $end
     $var wire  1 < reg2_re_o $end
     $var wire  5 > reg_waddr_o [4:0] $end
     $var wire  1 = reg_we_o $end
     $var wire  5 @ rs1 [4:0] $end
     $var wire  5 A rs2 [4:0] $end
     $var wire  5 A shamt [4:0] $end
    $upscope $end
   $upscope $end
   $scope module id_exe0 $end
    $var wire  1 8! clk_i $end
    $var wire 32 n inst_i [31:0] $end
    $var wire 32 - inst_o [31:0] $end
    $var wire 32 o op1_i [31:0] $end
    $var wire 32 ) op1_o [31:0] $end
    $var wire 32 p op2_i [31:0] $end
    $var wire 32 * op2_o [31:0] $end
    $var wire  5 r reg_waddr_i [4:0] $end
    $var wire  5 , reg_waddr_o [4:0] $end
    $var wire  1 q reg_we_i $end
    $var wire  1 + reg_we_o $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module if_id0 $end
    $var wire  1 8! clk_i $end
    $var wire 32 $ inst_addr_i [31:0] $end
    $var wire 32 ' inst_addr_o [31:0] $end
    $var wire 32 & inst_i [31:0] $end
    $var wire 32 ( inst_o [31:0] $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module mem0 $end
    $var wire 32 2 mem_addr_i [31:0] $end
    $var wire 32 <! mem_addr_o [31:0] $end
    $var wire 32 3 mem_data_i [31:0] $end
    $var wire 32 =! mem_data_o [31:0] $end
    $var wire  4 4 mem_op_i [3:0] $end
    $var wire  4 >! mem_op_o [3:0] $end
    $var wire  1 1 mem_we_i $end
    $var wire  1 ;! mem_we_o $end
    $var wire 32 %! ram_addr_o [31:0] $end
    $var wire  2 L ram_addr_offset [1:0] $end
    $var wire 32 (! ram_data_i [31:0] $end
    $var wire 32 '! ram_data_o [31:0] $end
    $var wire  1 &! ram_w_request_o $end
    $var wire  5 . reg_waddr_i [4:0] $end
    $var wire  5 "! reg_waddr_o [4:0] $end
    $var wire 32 0 reg_wdata_i [31:0] $end
    $var wire 32 $! reg_wdata_o [31:0] $end
    $var wire  1 / reg_we_i $end
    $var wire  1 #! reg_we_o $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module mem_wb0 $end
    $var wire  1 8! clk_i $end
    $var wire  5 "! reg_waddr_i [4:0] $end
    $var wire  5 5 reg_waddr_o [4:0] $end
    $var wire 32 $! reg_wdata_i [31:0] $end
    $var wire 32 7 reg_wdata_o [31:0] $end
    $var wire  1 #! reg_we_i $end
    $var wire  1 6 reg_we_o $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module pc_reg0 $end
    $var wire  1 % ce_o $end
    $var wire  1 8! clk_i $end
    $var wire 32 $ pc_o [31:0] $end
    $var wire  1 7! rst_i $end
   $upscope $end
   $scope module ram0 $end
    $var wire 32 %! addr_i [31:0] $end
    $var wire  1 8! clk_i $end
    $var wire 32 '! data_i [31:0] $end
    $var wire 32 (! data_o [31:0] $end
    $var wire  1 7! rst_i $end
    $var wire  1 &! we_i $end
   $upscope $end
   $scope module regfile0 $end
    $var wire  1 8! clk_i $end
    $var wire 32 # i [31:0] $end
    $var wire  5 s raddr1_i [4:0] $end
    $var wire  5 t raddr2_i [4:0] $end
    $var wire 32 w rdata1_o [31:0] $end
    $var wire 32 x rdata2_o [31:0] $end
    $var wire  1 u re1_i $end
    $var wire  1 v re2_i $end
    $var wire 32 N regs(0) [31:0] $end
    $var wire 32 O regs(1) [31:0] $end
    $var wire 32 X regs(10) [31:0] $end
    $var wire 32 Y regs(11) [31:0] $end
    $var wire 32 Z regs(12) [31:0] $end
    $var wire 32 [ regs(13) [31:0] $end
    $var wire 32 \ regs(14) [31:0] $end
    $var wire 32 ] regs(15) [31:0] $end
    $var wire 32 ^ regs(16) [31:0] $end
    $var wire 32 _ regs(17) [31:0] $end
    $var wire 32 ` regs(18) [31:0] $end
    $var wire 32 a regs(19) [31:0] $end
    $var wire 32 P regs(2) [31:0] $end
    $var wire 32 b regs(20) [31:0] $end
    $var wire 32 c regs(21) [31:0] $end
    $var wire 32 d regs(22) [31:0] $end
    $var wire 32 e regs(23) [31:0] $end
    $var wire 32 f regs(24) [31:0] $end
    $var wire 32 g regs(25) [31:0] $end
    $var wire 32 h regs(26) [31:0] $end
    $var wire 32 i regs(27) [31:0] $end
    $var wire 32 j regs(28) [31:0] $end
    $var wire 32 k regs(29) [31:0] $end
    $var wire 32 Q regs(3) [31:0] $end
    $var wire 32 l regs(30) [31:0] $end
    $var wire 32 m regs(31) [31:0] $end
    $var wire 32 R regs(4) [31:0] $end
    $var wire 32 S regs(5) [31:0] $end
    $var wire 32 T regs(6) [31:0] $end
    $var wire 32 U regs(7) [31:0] $end
    $var wire 32 V regs(8) [31:0] $end
    $var wire 32 W regs(9) [31:0] $end
    $var wire  1 7! rst_i $end
    $var wire  5 5 waddr_i [4:0] $end
    $var wire 32 7 wdata_i [31:0] $end
    $var wire  1 6 we_i $end
   $upscope $end
   $scope module rom0 $end
    $var wire 21 M addr4 [20:0] $end
    $var wire 32 $ addr_i [31:0] $end
    $var wire  1 % ce_i $end
    $var wire  1 8! clk_i $end
    $var wire 32 & inst_o [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000100000 #
b00000000000000000000000000000000 $
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
b00000 ,
b00000000000000000000000000000000 -
b00000 .
0/
b00000000000000000000000000000000 0
01
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b0000 4
b00000 5
06
b00000000000000000000000000000000 7
b0000000 8
b00000 9
b00000 :
0;
0<
0=
b00000 >
b00000 ?
b00000 @
b00000 A
b000 B
b0000000 C
0D
b0000000 E
b000 F
b0000000 G
b00000 H
0I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00 L
b000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000010011 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
0q
b00000 r
b00000 s
b00000 t
0u
0v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000 y
0z
b00000000000000000000000000000000 {
0|
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b0000 !!
b00000 "!
1#!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
0&!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000 +!
b00000 ,!
1-!
0.!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
11!
b00000 2!
b00000000000000000000000000000000 3!
04!
05!
b00000000000000000000000000000000 6!
17!
08!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
0;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b0000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
#10
b00000000000000000000000000010011 (
b00000000000000000000000000010011 -
1/
16
b0010011 8
b0010011 E
18!
#15
08!
#20
18!
#25
08!
#30
18!
#35
08!
#40
18!
#45
08!
#50
18!
#55
1q
1u
07!
08!
#60
1%
b00000000000000000000000000000000 (
1+
0/
b0000000 8
0q
0u
1z
0#!
18!
#65
08!
#70
b00000000000000000000000000000100 $
b11110000101100000000000110010011 &
0+
1/
06
b000000000000000000100 M
0z
1#!
18!
#75
08!
#80
b00000000000000000000000000001000 $
b11111010101100000000001000010011 &
b00000000000000000000000000000100 '
b11110000101100000000000110010011 (
0/
16
b0010011 8
b00011 ?
b01011 A
b1111000 C
b000000000000000001000 M
b11110000101100000000000110010011 n
b11111111111111111111111100001011 p
1q
b00011 r
1u
0#!
b11111111111111111111111100001011 *!
b11111111111111111111111100001011 0!
b00011 2!
18!
#85
08!
#90
b00000000000000000000000000001100 $
b00000000000000000000001010010111 &
b00000000000000000000000000001000 '
b11111010101100000000001000010011 (
b11111111111111111111111100001011 *
1+
b00011 ,
b11110000101100000000000110010011 -
06
b00100 ?
b1111101 C
b1111000 G
b01011 H
b11111111111111111111111100001011 J
b11111111111111111111111100000011 K
b000000000000000001100 M
b11111010101100000000001000010011 n
b11111111111111111111111110101011 p
b00100 r
b00011 y
1z
b11111111111111111111111100001011 {
b11111111111111111111111110101011 *!
b11111111111111111111111110101011 0!
b00100 2!
18!
#95
08!
#100
b00000000000000000000000000010000 $
b00000010000000101000001010010011 &
b00000000000000000000000000001100 '
b00000000000000000000001010010111 (
b11111111111111111111111110101011 *
b00100 ,
b11111010101100000000001000010011 -
b00011 .
1/
b11111111111111111111111100001011 0
b0010111 8
b00101 ?
b00000 A
b0000000 C
b1111101 G
b11111111111111111111111110101011 J
b11111111111111111111111110100100 K
b000000000000000010000 M
b00000000000000000000001010010111 n
b00000000000000000000000000001100 o
b00000000000000000000000000000000 p
b00101 r
0u
b00100 y
b11111111111111111111111110101011 {
b00011 "!
1#!
b11111111111111111111111100001011 $!
b00000000000000000000000000001100 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 0!
b00101 2!
18!
#105
08!
#110
b00000000000000000000000000010100 $
b00000000001100101000000000100011 &
b00000000000000000000000000010000 '
b00000010000000101000001010010011 (
b00000000000000000000000000001100 )
b00000000000000000000000000000000 *
b00101 ,
b00000000000000000000001010010111 -
b00100 .
b11111111111111111111111110101011 0
b00011 5
16
b11111111111111111111111100001011 7
b0010011 8
b00101 @
b0000001 C
b0010111 E
b0000000 G
b00000 H
b00000000000000000000000000000000 J
b00000000000000000000000000000101 K
b000000000000000010100 M
b00000010000000101000001010010011 n
b00000000000000000000000000100000 p
b00101 s
1u
b00101 y
b00000000000000000000000000001100 {
b00100 "!
b11111111111111111111111110101011 $!
b00000000000000000000000000000000 )!
b00000000000000000000000000100000 *!
b00101 +!
b00000000000000000000000000100000 0!
18!
#115
08!
#120
b00000000000000000000000000011000 $
b00000000010000101000000010100011 &
b00000000000000000000000000010100 '
b00000000001100101000000000100011 (
b00000000000000000000000000100000 *
b00000010000000101000001010010011 -
b00101 .
b00000000000000000000000000001100 0
b00100 5
b11111111111111111111111110101011 7
b0100011 8
b00000 ?
b00011 A
b0000000 C
b0010011 E
b0000001 G
b00000000000000000000000000100000 J
b00000000000000000000000000100101 K
b000000000000000011000 M
b11111111111111111111111100001011 Q
b00000000001100101000000000100011 n
b00000000000000000000000000101100 o
b11111111111111111111111100001011 p
0q
b00000 r
b00011 t
1v
b11111111111111111111111100001011 x
b00000000000000000000000000101100 {
b00101 "!
b00000000000000000000000000001100 $!
b11111111111111111111111100001011 *!
b00000000000000000000000000000011 0!
b00000 2!
18!
#125
08!
#130
b00000000000000000000000000011100 $
b00000000000000000000001010010111 &
b00000000000000000000000000011000 '
b00000000010000101000000010100011 (
b00000000000000000000000000101100 )
b11111111111111111111111100001011 *
0+
b00000 ,
b00000000001100101000000000100011 -
b00000000000000000000000000101100 0
b00101 5
b00000000000000000000000000001100 7
b00001 ?
b00100 A
b0100011 E
b0000000 G
b00011 H
b00000000000000000000000000000011 J
b00000000000000000000000000000000 K
b000000000000000011100 M
b11111111111111111111111110101011 R
b00000000010000101000000010100011 n
b11111111111111111111111110101011 p
b00100 t
b11111111111111111111111110101011 x
b00000 y
0z
b00000000000000000000000000000000 {
1|
b00000000000000000000000000101100 }
b11111111111111111111111100001011 ~
b0001 !!
b00000000000000000000000000101100 $!
b11111111111111111111111110101011 *!
b00000000000000000000000000000100 0!
b00001 2!
18!
#135
08!
#140
b00000000000000000000000000100000 $
b00000001000000101000001010010011 &
b00000000000000000000000000011100 '
b00000000000000000000001010010111 (
b11111111111111111111111110101011 *
b00000000010000101000000010100011 -
b00000 .
0/
b00000000000000000000000000000000 0
11
b00000000000000000000000000101100 2
b11111111111111111111111100001011 3
b0001 4
b00000000000000000000000000101100 7
b0010111 8
b00101 ?
b00000 @
b00000 A
b00100 H
b00000000000000000000000000000100 J
b00000000000000000000000000000001 K
b000000000000000100000 M
b00000000000000000000000000001100 S
b00000000000000000000001010010111 n
b00000000000000000000000000011100 o
b00000000000000000000000000000000 p
1q
b00101 r
b00000 s
b00000 t
0u
0v
b00000000000000000000000000000000 x
b00000000000000000000000000101101 }
b11111111111111111111111110101011 ~
b00000 "!
0#!
b00000000000000000000000000101100 %!
1&!
b00000000000000000000000000001011 '!
b00000000000000000000000000011100 )!
b00000000000000000000000000000000 *!
b00000 +!
b00000000000000000000000000000000 0!
b00101 2!
18!
#145
08!
#150
b00000000000000000000000000100100 $
b00000000000000101000001100000011 &
b00000000000000000000000000100000 '
b00000001000000101000001010010011 (
b00000000000000000000000000011100 )
b00000000000000000000000000000000 *
1+
b00101 ,
b00000000000000000000001010010111 -
b00000000000000000000000000101101 2
b11111111111111111111111110101011 3
b00000 5
06
b0010011 8
b00101 @
b10000 A
b0010111 E
b00000 H
b00000000000000000000000000000000 J
b00000000000000000000000000000101 K
b01 L
b000000000000000100100 M
b00000000000000000000000000101100 S
b00000001000000101000001010010011 n
b00000000000000000000000000010000 p
b00101 s
1u
b00000000000000000000000000101100 w
b00101 y
1z
b00000000000000000000000000011100 {
0|
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b0000 !!
b00000000000000000000000000101101 %!
b00000000000000001010101100001011 '!
b00000000000000000000000000001011 (!
b00000000000000000000000000101100 )!
b00000000000000000000000000010000 *!
b00101 +!
b00000000000000000000000000101100 /!
b00000000000000000000000000010000 0!
18!
#155
08!
#160
b00000000000000000000000000101000 $
b00000000000100101000001110000011 &
b00000000000000000000000000100100 '
b00000000000000101000001100000011 (
b00000000000000000000000000010000 *
b00000001000000101000001010010011 -
b00101 .
1/
b00000000000000000000000000011100 0
01
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b0000 4
b0000011 8
b00110 ?
b00000 A
b0010011 E
b10000 H
b00000000000000000000000000010000 J
b00 L
b000000000000000101000 M
b00000000000000101000001100000011 n
b00000000000000000000000000101100 o
b00000000000000000000000000000000 p
b00110 r
b00000000000000000000000000101100 {
b00101 "!
1#!
b00000000000000000000000000011100 $!
b00000000000000000000000000000000 %!
0&!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 0!
b00110 2!
18!
#165
08!
#170
b00000000000000000000000000101100 $
b00000000000000000000000000000000 &
b00000000000000000000000000101000 '
b00000000000100101000001110000011 (
b00000000000000000000000000101100 )
b00000000000000000000000000000000 *
b00110 ,
b00000000000000101000001100000011 -
b00000000000000000000000000101100 0
b00101 5
16
b00000000000000000000000000011100 7
b00111 ?
b00001 A
b0000011 E
b00000 H
b00000000000000000000000000000000 J
b00000000000000000000000000000110 K
b000000000000000101100 M
b00000000000100101000001110000011 n
b00111 r
b00110 y
b00000000000000000000000000000000 {
b00000000000000000000000000101100 }
b1001 !!
b00000000000000000000000000101100 $!
b00000000000000000000000000000001 0!
b00111 2!
15!
18!
#175
08!
#180
b00000000000000000000000000110000 $
b00000000000000000000000000101100 '
b00000000000000000000000000000000 (
b00111 ,
b00000000000100101000001110000011 -
b00110 .
b00000000000000000000000000000000 0
b00000000000000000000000000101100 2
b1001 4
b00000000000000000000000000101100 7
b0000000 8
b00000 ?
b00000 @
b00000 A
b00001 H
b00000000000000000000000000000001 J
b00000000000000000000000000000111 K
b000000000000000110000 M
b00000000000000000000000000011100 S
b00000000000000000000000000010011 n
b00000000000000000000000000000000 o
0q
b00000 r
b00000 s
0u
b00000000000000000000000000000000 w
b00111 y
b00000000000000000000000000101101 }
b00110 "!
b00000000000000000000000000001011 $!
b00000000000000000000000000101100 %!
b00000000000000001010101100001011 (!
b00000000000000000000000000000000 )!
b00000 +!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000 2!
18!
#185
08!
#190
b00000000000000000000000000110100 $
b00000000000000000000000000110000 '
b00000000000000000000000000000000 )
0+
b00000 ,
b00000000000000000000000000010011 -
b00111 .
b00000000000000000000000000101101 2
b00110 5
b00000000000000000000000000001011 7
b0010011 E
b00000 H
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b01 L
b000000000000000110100 M
b00000000000000000000000000101100 S
b00000 y
0z
b00000000000000000000000000000000 }
b0000 !!
b00111 "!
b11111111111111111111111110101011 $!
b00000000000000000000000000101101 %!
05!
18!
#195
08!
#200
b00000000000000000000000000111000 $
b00000000000000000000000000110100 '
b00000 .
0/
b00000000000000000000000000000000 2
b0000 4
b00111 5
b11111111111111111111111110101011 7
b00 L
b000000000000000111000 M
b00000000000000000000000000001011 T
b00000 "!
0#!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 (!
18!
#205
08!
#210
b00000000000000000000000000111100 $
b00000000000000000000000000111000 '
b00000 5
06
b00000000000000000000000000000000 7
b000000000000000111100 M
b11111111111111111111111110101011 U
18!
#215
08!
#220
b00000000000000000000000001000000 $
b00000000000000000000000000111100 '
b000000000000001000000 M
18!
#225
08!
#230
b00000000000000000000000001000100 $
b00000000000000000000000001000000 '
b000000000000001000100 M
18!
#235
08!
#240
b00000000000000000000000001001000 $
b00000000000000000000000001000100 '
b000000000000001001000 M
18!
#245
08!
#250
b00000000000000000000000001001100 $
b00000000000000000000000001001000 '
b000000000000001001100 M
18!
